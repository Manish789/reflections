How did viewing a diff between two versions of a file help you see the bug that was introduced?

It spotted out the difference between the old and new file, immediately i corrected and bang i was right on track.

How could having easy access to the entire history of a file make you a more efficient programmer in the long term?

It helps me to find out how exactly i am trying to solve the problem in hand, also to revert to any previous version
 if i am in the wrong direction towards the solution to a given problem.

What do you think are the pros and cons of manually choosing when to create a commit, like you do in Git, vs having
versions automatically saved, like in Google docs does?

Manually choosing commits helps me to take decisions precisely based on the logical changes i have done, making it
easy for me to understand the changes done more clearly.

Why do you think some version control system, like Git, allow saving multiple files in one commit, while others,
like, like Google Docs, treat each file separately?

This is because some of the files in a project are related to each other, so it is good to consider changes made to
any one of the file or more related files together considered in one commit.

How can you use the commands git log and git diff to view the history of files ?

Git log shows all the commits that have been done in the project along with the small comments added during each
comment, making it easier to identify the changes.
Git diff show the difference between two changes/commit made in the project showing us the exact
changes(insertion/deletion) done on the files.

How might using version control make you more confident to make changes that could break something?

Version control keeps track of changes on the basis of commits, if a bug is found i can checkout to previous commits
and then find out at which point the bug was introduced making my life easier.

Now that you have your workspace set up, what do you want to try using Git for?

I can use it for my personal Development work. 
